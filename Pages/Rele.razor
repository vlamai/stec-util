@page "/Rele"
@using stec_util.Data.jira
@using stec_util.Data.jira.Dto
@using stec_util.Data
@inject IJiraService JiraService


<h3>Release</h3>


<div class="card col-md-12 d-flex justify-content-left" style="background-color: whitesmoke; color: darkgray">

    <p class="card-text">@_pageState.Message</p>

</div>


<div class="row">
    <div class="input-group mb-2">
        @if (_pageState.Loading == false)
        {
            <button @onclick="Find" class="btn btn-outline-success" type="button" id="button-addon2">Find</button>
        }
        <select class="form-select" @bind="SelectedVersion" aria-describedby="button-addon2">
            <option></option>
            @foreach (var version in _versions)
            {
                <option value="@version">@version</option>
            }
        </select>

    </div>
</div>
<table class="table table-striped">
    <thead>
    <tr>
        <th>Type</th>
        <th>Key</th>
        <th>Summary</th>
        <th>Assignee</th>
        <th>Services</th>
    </tr>
    </thead>
    <tbody>
    @foreach (var dto in _dtos.OrderBy(x => x.Key))
    {
        <tr>
            <td>@dto.Type</td>
            <td>@dto.Key</td>
            <td>
                <a href="https://jira.stecpoint.ru/browse/@dto.Key">@dto.Summary</a>
            </td>
            <td>@dto.Assignee</td>
            <td>
                <ul class="list-group">
                    @if (dto.Services != null)
                    {
                        foreach (var service in dto.Services)
                        {
                            <li class="list-group-item">@service</li>
                        }
                    }
                </ul>
            </td>
        </tr>
    }
    </tbody>
</table>
<h3>Полный список сервисов</h3>
<ul class="list-group">
    @foreach (var service in _allServices)
    {
        <li class="list-group-item">@service</li>
    }
</ul>

@code {
    private PageSate _pageState;

    private List<IssueDto> _dtos;
    private List<string> _allServices;
    private IEnumerable<string> _versions = new List<string>();

    public Rele()
    {
        _pageState = new PageSate();
        _dtos = new List<IssueDto>();
        _allServices = new List<string>();
    }

    private string? SelectedVersion { get; set; }

    protected override async Task OnInitializedAsync()
    {
        _versions = await JiraService.GetReleaseVersions();
        _pageState.StopLoading();
    }

    private async Task Find()
    {
        if (SelectedVersion == null)
        {
            return;
        }
        _dtos = new List<IssueDto>();
        _allServices = new List<string>();

        _pageState.StartLoading();
        var dtos = await JiraService.GetReleaseIssues(SelectedVersion);

        _dtos.AddRange(dtos);

        _pageState.StopLoading();
        await GetServices();
    // _allServices = _dtos.SelectMany(x => x.Services).Distinct().OrderBy(q => q);
    }

    private async Task GetServices()
    {
        _pageState.StartLoading();
        var i = 0;
        foreach (var issueDto in _dtos)
        {
            i++;
            _pageState.SetMessage($"[{i}|{_dtos.Count}]Получение сервисов для {issueDto.Key}");
            StateHasChanged();
            var services = await JiraService.GetTaskWithSubTasksServices(issueDto.Key);
            var dtoServices = services.ToList();

            issueDto.Services = dtoServices;
            _allServices.AddRange(dtoServices);
            _allServices = _allServices.Distinct().OrderBy(q => q).ToList();
        }
        _pageState.StopLoading();
    }

}
